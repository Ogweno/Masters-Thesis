#!/bin/sh
# Shell script to take a file of rfksyn-style models and turn them into
#    receiver functions.
freq=1 sps=20 type=P tmp=/tmp/tmp$$
while [ $# -gt 0 ]; do
   case "$1" in
   -freq) freq=$2; shift;;
   -sps) sps=$2; shift;;
   -type) type=$2; shift;;
   -p) slow="$2"; shift;;
   -w*) win="$2 $3"; shift 2 ;;
   *) echo "**$0: Unrecognized parameter: $1" ; exit 1;;
   esac
   shift
done

noi=`echo $win | awk '{dur=$2-$1; printf "%f %f\n",$1-dur,$1}'`

awk 'BEGIN{
   cmd="rfksyn -sps '"${sps}"' -type '"${type}"' -p '"${slow}"' s/deg -conf -gen zr -sph | \
   rfreformat \"'"${win}"'\" \"'"${noi}"'\" | mtdecon -freq '"${freq}"'"
   search=1; modnum=0
}
search==1{nlay=$1; nlin=0; search=0; fn=sprintf("/tmp/model%03d",modnum)
   modnum += 1
   print $0 > fn
   next
}
search==0{nlin+=1; print $0 > fn
   if (nlin == nlay) {
      print fn | cmd; close(fn)
      search=1
   }
}
END{
   if (search==0) {
      print "**End of data while in middle of model!" > "/dev/tty"
      print "**Will valiantly try to calculate it anyway!" > "/dev/tty"
      print fn | cmd
   }
}'
