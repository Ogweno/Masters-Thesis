* mtrf calculates receiver functions by multitaper cross-correlation in the
*    frequency domain.
*
* It builds input and runs the receiver function program.
*
* Assumes A variable in file header set to begin of measurement interval, F 
* variable set to end.  If variables not set, then you are prompted.
* Other parameters:
*    file xxxx - prefix to file names
*    comps ce cn cz - three component suffixes, east north vertical components.
*       File names are thus xxxx.ce xxxx.cn xxxx.cz, OK?
*    plot yes - make SGF plot file and plot to screen
*    plot no - plot only to screen
*    phase xxx - name of phase to measure, just a comment.
*       Included in log output.
*    fmax xxx - max frequency to deal with in frequency domain.
*    pick [ yes | maybe ] - If yes, force re-picking of seismogram even if
*       A and F are set.
*    window xxx - window length around arrival for display purposes.
*
* G. Helffrich/U. Bristol Jan-Oct. 2005
*
* Assumes two programs are available in your search path:
*    mtdecon, sacsetomarker.
*
* There is a pause between panels of the results.  If you are viewing them
* and wish to abort, respond by typing a nonblank response.
****   NOTE before opening any windows type the following command to get
*     proper windowing
*   window 1 x 0.05 0.80 y 0.05 0.74
* then type 'bd xwindow' or 'bd sunwindow' or 'bd macwindow'
****
*
$keys file comps phase plot fmax pick window tables debug
$default phase default
$default plot no
$default fmax 3.0
$default pick maybe
$default window 120
$default tables ak135
$default debug no
setbb sta (CONCAT (BEFORE "." "$file$") ".dpar")
setbb pick $pick
setbb fake ""
setbb files " "
setbb hfiles " "
setbb i 0
do sfx list $comps
   setbb files APPEND " $file$.$sfx$"
   setbb i ( %i + 1 )
   if %i le 2
      setbb hfiles APPEND " $file$.$sfx$"
   else
      setbb zfile "$file$.$sfx$"
   endif
enddo
if "$sfx$" eq '(change z Z "$sfx$")'
* Check for upper/lower case suffixes - upper case
   setbb rfcns "$file$.NRFR $file$.NRFT $file$.NRFZ"
   setbb rfiles "$file$.(change Z R $sfx$) $file$.(change Z T $sfx$)"
else
* Check for upper/lower case suffixes - lower case
   setbb rfcns "$file$.nrfr $file$.nrft $file$.nrfz"
   setbb rfiles "$file$.(change z r $sfx$) $file$.(change z t $sfx$)"
endif
message "%files%"
rh %files%
* Phase being measured is taken from KA marker in the file, if present.
if $phase eq default
   if _UNDEFINED ne _&1,ka
      setbb phase "&1,ka "
   else
      setbb phase P
   endif
else
   setbb phase $phase
endif
if _no_ ne _$debug$_
   setbb fake append " -debug"
endif
* Write a record to the run log only if were're going to plot this record.
*    The measurement is otherwise deemed unworthy of mention.
* setbb log "(concatenate &1,kstnm& .split)"
* sc touch %log%
* do loop below isn't really a loop, but is used so that the BREAK command
*   will exit if no markers set during PPK.
do loopo list once
if &1,a eq UNDEFINED
   setbb pick yes
endif
if %pick% eq yes
   r %files% ; rmean ; m ttsac phase %phase
   m prompt "Hit return, then pick window - A begins window, F ends it"
   if "%prompt%_" ne "_"
      break
   endif
*  r %files% ; plotpk zero markall on
   plotpk zero markall on
   if &1,a eq UNDEFINED
      break
   endif
   setbb beg &1,a& ; setbb end &1,f&
   rh %files% ; ch a %beg f %end ka %phase kf _ ; wh %files%
endif
sc to rt echo $comps$ | awk '{l1=length@(@$1@); l2=length@(@$2@); print substr@(@$1,l1,1@),substr@(@$2,l2,1@)}'
if (concatenate (change R r (item 1 %rt%)) (change T t (item 2 %rt%))) ne rt
   r %hfiles% ; rmean ; rotate to gcarc reversed ; w %rfiles%
   message "%hfiles% rewritten as %rfiles%"
endif
* Build input file for measurement program, then invoke it.
setbb ofiles "%rfcns%" ; setbb dur (&1,f& - &1,a&)
do f list %rfiles% %zfile%
   setbb rff '(before " " "%ofiles% ")'
   sc mtdecon -freq $fmax$ %fake% -window &1,a &1,f -noise (&1,a& - %dur%) &1,a& -wavelet &1,a& &1,f& %zfile% $f$ %rff%
   setbb ofiles '(after " " "%ofiles%")'
enddo
if no ne $plot
   bd more sgf
endif
* sc touch %sta%
sc echo "$file$ mtd $fmax$" >> %sta%
if $tables$ ne NONE
$run awk 'NR==1{phase=@$0} NR>1{for@(i=1;i<=3;i++@) printf "@%s @%s 0.0\n",@$@(i@),phase}' > ./decon.in
%phase%
%rfcns%
$endrun
   sc sacsetomarker -model $tables$ < ./decon.in
   sc /bin/rm -f ./decon.in
endif
r %rfcns% ; p1
enddo
unsetbb hfiles rfiles ofiles zfile log i id filter sta rfcns rff rt
unsetbb pause phase pick
if no ne $plot
   bd previous
endif
